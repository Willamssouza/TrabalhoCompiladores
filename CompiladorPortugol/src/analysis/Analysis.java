/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTPrograma(TPrograma node);
    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTEscreva(TEscreva node);
    void caseTLeia(TLeia node);
    void caseTEnquanto(TEnquanto node);
    void caseTFimEnquanto(TFimEnquanto node);
    void caseTSe(TSe node);
    void caseTEntao(TEntao node);
    void caseTSenao(TSenao node);
    void caseTFimSe(TFimSe node);
    void caseTPara(TPara node);
    void caseTDe(TDe node);
    void caseTPasso(TPasso node);
    void caseTFimPara(TFimPara node);
    void caseTAte(TAte node);
    void caseTFaca(TFaca node);
    void caseTRepita(TRepita node);
    void caseTAvalie(TAvalie node);
    void caseTCaso(TCaso node);
    void caseTFimAvalie(TFimAvalie node);
    void caseTConst(TConst node);
    void caseTTipo(TTipo node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTDivisao(TDivisao node);
    void caseTMult(TMult node);
    void caseTIgual(TIgual node);
    void caseTDiferente(TDiferente node);
    void caseTMaior(TMaior node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTXor(TXor node);
    void caseTNao(TNao node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTParD(TParD node);
    void caseTParE(TParE node);
    void caseTColD(TColD node);
    void caseTColE(TColE node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTSemicolon(TSemicolon node);
    void caseTPonto(TPonto node);
    void caseTVirgula(TVirgula node);
    void caseTId(TId node);
    void caseTNInt(TNInt node);
    void caseTNReal(TNReal node);
    void caseTString(TString node);
    void caseTCommentLine(TCommentLine node);
    void caseTComment(TComment node);
    void caseTCommentEnd(TCommentEnd node);
    void caseTCommentBody(TCommentBody node);
    void caseTStar(TStar node);
    void caseTSlash(TSlash node);
    void caseTBlank(TBlank node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
