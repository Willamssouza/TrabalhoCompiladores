/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AMaiorExpRelational extends PExpRelational
{
    private PExpRelational _expRelational_;
    private TMaior _maior_;
    private PExpAdditive _expAdditive_;

    public AMaiorExpRelational()
    {
        // Constructor
    }

    public AMaiorExpRelational(
        @SuppressWarnings("hiding") PExpRelational _expRelational_,
        @SuppressWarnings("hiding") TMaior _maior_,
        @SuppressWarnings("hiding") PExpAdditive _expAdditive_)
    {
        // Constructor
        setExpRelational(_expRelational_);

        setMaior(_maior_);

        setExpAdditive(_expAdditive_);

    }

    @Override
    public Object clone()
    {
        return new AMaiorExpRelational(
            cloneNode(this._expRelational_),
            cloneNode(this._maior_),
            cloneNode(this._expAdditive_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaiorExpRelational(this);
    }

    public PExpRelational getExpRelational()
    {
        return this._expRelational_;
    }

    public void setExpRelational(PExpRelational node)
    {
        if(this._expRelational_ != null)
        {
            this._expRelational_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expRelational_ = node;
    }

    public TMaior getMaior()
    {
        return this._maior_;
    }

    public void setMaior(TMaior node)
    {
        if(this._maior_ != null)
        {
            this._maior_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._maior_ = node;
    }

    public PExpAdditive getExpAdditive()
    {
        return this._expAdditive_;
    }

    public void setExpAdditive(PExpAdditive node)
    {
        if(this._expAdditive_ != null)
        {
            this._expAdditive_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expAdditive_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expRelational_)
            + toString(this._maior_)
            + toString(this._expAdditive_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expRelational_ == child)
        {
            this._expRelational_ = null;
            return;
        }

        if(this._maior_ == child)
        {
            this._maior_ = null;
            return;
        }

        if(this._expAdditive_ == child)
        {
            this._expAdditive_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expRelational_ == oldChild)
        {
            setExpRelational((PExpRelational) newChild);
            return;
        }

        if(this._maior_ == oldChild)
        {
            setMaior((TMaior) newChild);
            return;
        }

        if(this._expAdditive_ == oldChild)
        {
            setExpAdditive((PExpAdditive) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
