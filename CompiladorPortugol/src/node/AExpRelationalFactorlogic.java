/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AExpRelationalFactorlogic extends PFactorlogic
{
    private PExprelational _exprelational_;

    public AExpRelationalFactorlogic()
    {
        // Constructor
    }

    public AExpRelationalFactorlogic(
        @SuppressWarnings("hiding") PExprelational _exprelational_)
    {
        // Constructor
        setExprelational(_exprelational_);

    }

    @Override
    public Object clone()
    {
        return new AExpRelationalFactorlogic(
            cloneNode(this._exprelational_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpRelationalFactorlogic(this);
    }

    public PExprelational getExprelational()
    {
        return this._exprelational_;
    }

    public void setExprelational(PExprelational node)
    {
        if(this._exprelational_ != null)
        {
            this._exprelational_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprelational_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprelational_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprelational_ == child)
        {
            this._exprelational_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprelational_ == oldChild)
        {
            setExprelational((PExprelational) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
